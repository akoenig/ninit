#!/usr/bin/env node

'use strict';

var path     = require('path'),
    fs       = require('fs'),
    readline = require('readline'),
    chalk    = require('chalk'),
    pkg      = require('../package.json'),
    nmg      = require('../'),
    Helpers  = require('../lib/utilities');

module.exports = (function main () {

    var templateDir = path.join(__dirname, '..', 'templates'),
        templateName = process.argv[2],
        cli = readline.createInterface(process.stdin, process.stdout),
        specification = {},
        tokens;

    function next () {
        var token = tokens.pop();

        if (token) {
            cli.setPrompt('[' + pkg.name + '] ' + token.charAt(0).toUpperCase() + token.slice(1) + ': ');
            cli.prompt();

            cli.once('line', function (value) {
                value = value.trim();

                specification[token] = value;

                next();
            });
        } else {
            return done();
        }
    }

    function done () {
        nmg.generate(templateName, specification)
            .once('error', function onError (err) {
                return console.error(chalk.red(err.toString()));
            })
            .once('done', function onDone () {
                console.log(chalk.green('\n... created!'));

                process.exit(0)
            });
    }

    if (!templateName) {
        console.log('%s - %s', pkg.name, pkg.description);
        console.log('Usage: %s template-name', pkg.name);

        console.error(chalk.red('Missing template name. If you would like to see a list of template, use `%s ls`'), pkg.name);
        process.exit(1);
    } else if ('ls' === templateName) {
        fs.readdirSync(templateDir).sort().forEach(function onTemplate (template) {
            console.log(chalk.green(template));
        });

        process.exit(0);
    }

    tokens = Helpers.getTokens(fs.readFileSync(path.join(templateDir, templateName, 'package.json'))).reverse();

    next();
})();
